// Generated by view binder compiler. Do not edit!
package com.omkar.controller.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.omkar.controller.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBluetoothBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ListView connectedDevicesList;

  @NonNull
  public final TextView connectedDevicesString;

  @NonNull
  public final Button refreshBondedDevicesButton;

  @NonNull
  public final ListView scannedDevicesList;

  @NonNull
  public final TextView scannedDevicesString;

  @NonNull
  public final Button startScanButton;

  @NonNull
  public final Button stopScanButton;

  @NonNull
  public final Button testButton;

  private FragmentBluetoothBinding(@NonNull LinearLayout rootView,
      @NonNull ListView connectedDevicesList, @NonNull TextView connectedDevicesString,
      @NonNull Button refreshBondedDevicesButton, @NonNull ListView scannedDevicesList,
      @NonNull TextView scannedDevicesString, @NonNull Button startScanButton,
      @NonNull Button stopScanButton, @NonNull Button testButton) {
    this.rootView = rootView;
    this.connectedDevicesList = connectedDevicesList;
    this.connectedDevicesString = connectedDevicesString;
    this.refreshBondedDevicesButton = refreshBondedDevicesButton;
    this.scannedDevicesList = scannedDevicesList;
    this.scannedDevicesString = scannedDevicesString;
    this.startScanButton = startScanButton;
    this.stopScanButton = stopScanButton;
    this.testButton = testButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBluetoothBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBluetoothBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_bluetooth, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBluetoothBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.connectedDevicesList;
      ListView connectedDevicesList = ViewBindings.findChildViewById(rootView, id);
      if (connectedDevicesList == null) {
        break missingId;
      }

      id = R.id.connectedDevicesString;
      TextView connectedDevicesString = ViewBindings.findChildViewById(rootView, id);
      if (connectedDevicesString == null) {
        break missingId;
      }

      id = R.id.refreshBondedDevicesButton;
      Button refreshBondedDevicesButton = ViewBindings.findChildViewById(rootView, id);
      if (refreshBondedDevicesButton == null) {
        break missingId;
      }

      id = R.id.scannedDevicesList;
      ListView scannedDevicesList = ViewBindings.findChildViewById(rootView, id);
      if (scannedDevicesList == null) {
        break missingId;
      }

      id = R.id.scannedDevicesString;
      TextView scannedDevicesString = ViewBindings.findChildViewById(rootView, id);
      if (scannedDevicesString == null) {
        break missingId;
      }

      id = R.id.startScanButton;
      Button startScanButton = ViewBindings.findChildViewById(rootView, id);
      if (startScanButton == null) {
        break missingId;
      }

      id = R.id.stopScanButton;
      Button stopScanButton = ViewBindings.findChildViewById(rootView, id);
      if (stopScanButton == null) {
        break missingId;
      }

      id = R.id.testButton;
      Button testButton = ViewBindings.findChildViewById(rootView, id);
      if (testButton == null) {
        break missingId;
      }

      return new FragmentBluetoothBinding((LinearLayout) rootView, connectedDevicesList,
          connectedDevicesString, refreshBondedDevicesButton, scannedDevicesList,
          scannedDevicesString, startScanButton, stopScanButton, testButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
